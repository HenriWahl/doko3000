version: '3.7'

networks:
  doko3000:
    name: doko3000

volumes:
  doko3000-couchdb-config:
  doko3000-couchdb-data:
  doko3000-certbot-config:
  doko3000-certbot-www:

services:
  doko3000:
    build: ..
    image: doko3000
    container_name: doko3000
    restart: always
    networks:
      - doko3000
    environment:
      - HOST
      - SECRET_KEY
      - COUCHDB_USER
      - COUCHDB_PASSWORD
  couchdb:
    image: couchdb
    container_name: doko3000-couchdb
    restart: always
    volumes:
      - doko3000-couchdb-data:/opt/couchdb/data
      - doko3000-couchdb-config:/opt/couchdb/etc/local.d
    networks:
      - doko3000
    environment:
      - COUCHDB_USER
      - COUCHDB_PASSWORD
  nginx:
    image: nginx:stable-alpine
    container_name: doko3000-nginx
    restart: always
    ports:
      - 80:80/tcp
      - 443:443/tcp
    volumes:
      - ./nginx-https-letsencrypt.conf:/etc/nginx/conf.d/default.conf
      - ../doko3000/static:/usr/share/nginx/html/static
      - doko3000-certbot-config:/etc/letsencrypt
      - doko3000-certbot-www:/usr/share/nginx/html/certbot
    networks:
      - doko3000
    command:
      "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
  certbot:
    image: certbot/certbot
    container_name: doko3000-certbot
    restart: always
    volumes:
      - doko3000-certbot-config:/etc/letsencrypt
      - doko3000-certbot-www:/usr/share/nginx/html/certbot
    networks:
      - doko3000
    entrypoint:
      "/bin/sh -c 'trap exit TERM; while :; do certbot --webroot-path=/usr/share/nginx/html/certbot renew; sleep 12h & wait $${!}; done;'"
